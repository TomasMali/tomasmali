{
  "_from": "jspdf",
  "_id": "jspdf@1.5.3",
  "_inBundle": false,
  "_integrity": "sha512-J9X76xnncMw+wIqb15HeWfPMqPwYxSpPY8yWPJ7rAZN/ZDzFkjCSZObryCyUe8zbrVRNiuCnIeQteCzMn7GnWw==",
  "_location": "/jspdf",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "jspdf",
    "fetchSpec": "latest",
    "name": "jspdf",
    "raw": "jspdf",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/jspdf/-/jspdf-1.5.3.tgz",
  "_shasum": "5a12c011479defabef5735de55c913060ed219f2",
  "_shrinkwrap": null,
  "_spec": "jspdf",
  "_where": "/home/tommal/Scrivania/MyWeb",
  "bugs": {
    "url": "https://github.com/MrRio/jsPDF/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "canvg": "1.5.3",
    "file-saver": "github:eligrey/FileSaver.js#1.3.8",
    "html2canvas": "1.0.0-alpha.12",
    "omggif": "1.0.7",
    "promise-polyfill": "8.1.0",
    "stackblur-canvas": "2.2.0"
  },
  "deprecated": false,
  "description": "PDF Document creation from JavaScript",
  "devDependencies": {
    "@babel/core": "^7.2.2",
    "@babel/plugin-external-helpers": "7.2.0",
    "@babel/preset-env": "^7.2.0",
    "babel-plugin-rewire-exports": "1.0.1",
    "codeclimate-test-reporter": "0.5.1",
    "diff": "3.5.0",
    "docdash": "1.0.1",
    "folder-delete": "1.0.3",
    "gulp-babel": "^8.0.0",
    "jasmine-core": "3.3.0",
    "jasmine-expect": "^4.0.0",
    "jasmine-matchers": "^0.2.3",
    "js-yaml": "3.12.0",
    "jsdoc": "3.5.5",
    "karma": "3.1.4",
    "karma-babel-preprocessor": "^8.0.0-beta.0",
    "karma-chrome-launcher": "2.2.0",
    "karma-coverage": "1.1.2",
    "karma-firefox-launcher": "1.1.0",
    "karma-ie-launcher": "1.0.0",
    "karma-jasmine": "^2.0.0",
    "karma-jasmine-matchers": "^3.8.3",
    "karma-mocha-reporter": "2.2.5",
    "karma-sauce-launcher": "1.2.0",
    "karma-verbose-reporter": "0.0.6",
    "local-web-server": "2.6.0",
    "markdown": "0.5.0",
    "rollup": "0.68.2",
    "rollup-plugin-babel": "4.1.0",
    "rollup-plugin-node-resolve": "3.4.0",
    "uglify-js": "3.4.9"
  },
  "files": [
    "README.md",
    "dist/jspdf.debug.js",
    "dist/jspdf.min.js",
    "dist/jspdf.node.debug.js",
    "dist/jspdf.node.min.js"
  ],
  "homepage": "https://github.com/mrrio/jspdf",
  "keywords": [
    "pdf"
  ],
  "license": "MIT",
  "main": "dist/jspdf.min.js",
  "name": "jspdf",
  "optionalDependencies": {},
  "readme": "# jsPDF\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/MrRio/jsPDF.svg)](https://greenkeeper.io/)\n[![Build Status](https://saucelabs.com/buildstatus/jspdf)](https://saucelabs.com/beta/builds/526e7fda50bd4f97a854bf10f280305d)\n[![Code Climate](https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/gpa.svg)](https://codeclimate.com/repos/57f943855cdc43705e00592f/feed)\n[![Test Coverage](https://codeclimate.com/repos/57f943855cdc43705e00592f/badges/2665cddeba042dc5191f/coverage.svg)](https://codeclimate.com/repos/57f943855cdc43705e00592f/coverage)\n[![GitHub license](https://img.shields.io/github/license/MrRio/jsPDF.svg)](https://github.com/MrRio/jsPDF/blob/master/LICENSE)\n\n\n\n**A library to generate PDFs in client-side JavaScript.**\n\nYou can [catch me on twitter](http://twitter.com/MrRio): [@MrRio](http://twitter.com/MrRio) or head over to [my company's website](http://parall.ax) for consultancy.\n\n## [Live Demo](http://rawgit.com/MrRio/jsPDF/master/) | [Documentation](http://rawgit.com/MrRio/jsPDF/master/docs/)\n\n## Creating your first document\n\nThe easiest way to get started is to drop the CDN hosted library into your page:\n\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.1/jspdf.debug.js\" integrity=\"sha384-THVO/sM0mFD9h7dfSndI6TS0PgAGavwKvB5hAxRRvc0o9cPLohB0wb/PTA7LdUHs\" crossorigin=\"anonymous\"></script>\n```\n\nIntegrity-hash generated by https://www.srihash.org/\n\nor can always get latest version via [unpkg](https://unpkg.com/#/)\n\n```html\n<script src=\"https://unpkg.com/jspdf@latest/dist/jspdf.min.js\"></script>\n```\n\nUsing yarn:\n\n```bash\nyarn add jspdf\n```\n\nUsing npm:\n\n```bash\nnpm install jspdf --save\n```\n\nThen you're ready to start making your document:\n\n```javascript\n// Default export is a4 paper, portrait, using milimeters for units\nvar doc = new jsPDF()\n\ndoc.text('Hello world!', 10, 10)\ndoc.save('a4.pdf')\n```\n\nIf you want to change the paper size, orientation, or units, you can do:\n\n```javascript\n// Landscape export, 2Ã—4 inches\nvar doc = new jsPDF({\n  orientation: 'landscape',\n  unit: 'in',\n  format: [4, 2]\n})\n\ndoc.text('Hello world!', 1, 1)\ndoc.save('two-by-four.pdf')\n\n```\n\n## Use of UTF-8 / TTF:\n\nThe 14 standard fonts in PDF are limited to the ASCII-codepage. If you want to use UTF-8 you have to to integrate a custom font, which provides the needed glyphs. jsPDF supports .ttf-files. So if you want to have for example chinese text in your pdf, your font has to have the necessary chinese glyphs. So check if your font supports the wanted glyphs or else it will show a blank space instead of the text.\n\nTo add the font to jsPDF use our fontconverter in /fontconver/fontconverter.html . The fontconverter will create a js-file with the content of the provided ttf-file as base64 encoded string and additional code for jsPDF. You just have to add this generated js-File to your project. You are then ready to go to use setFont-method in your code and write your UTF-8 encoded text.\n\n## Angular/Webpack/React/etc. Configuration:\n\nIf you are using Webpack (including managed cli tools like angular-cli or create-react-app) you can import like this:\n\n```\nimport * as jsPDF from 'jspdf'\n```\n\nIn some frameworks you have to import jsPDF like this:\n\n```\nimport jsPDF from 'jspdf';\n```\n\nYou can add jsPDF to your meteor-project as follows:\n\n```\nmeteor add jspdf:core\n```\n\n## Contributing\nBuild the library with `npm run build`. This will fetch all dependencies and then compile the `dist` files. To see the examples locally you can start a web server with `npm start` and go to `localhost:8000`.\n\n## Credits\n- Big thanks to Daniel Dotsenko from [Willow Systems Corporation](https://github.com/willowsystems) for making huge contributions to the codebase.\n- Thanks to Ajaxian.com for [featuring us back in 2009](http://ajaxian.com/archives/dynamically-generic-pdfs-with-javascript).\n- Our special thanks to GH Lee ([sphilee](https://github.com/sphilee)) for programming the ttf-file-support and providing a large and long sought after feature\n- Everyone else that's contributed patches or bug reports. You rock.\n\n## License (MIT)\nCopyright (c) 2010-2017 James Hall, https://github.com/MrRio/jsPDF\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MrRio/jsPDF.git"
  },
  "scripts": {
    "build": "npm install && node build.js && node build.js type=node",
    "delete-docs": "node deletedocs.js",
    "generate-docs": "jsdoc -c jsdoc.json --readme README.md",
    "start": "ws",
    "test": "karma start saucelabs.karma.conf.js --single-run --verbose && for a in coverage/*; do codeclimate-test-reporter < \"$a/lcov.info\"; break; done",
    "test-local": "karma start karma.conf.js",
    "test-training": "node tests/utils/reference-server.js",
    "version": "npm run build && git add -A dist"
  },
  "version": "1.5.3"
}
